/*
Deployment script for Stuff

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Stuff"
:setvar DefaultFilePrefix "Stuff"
:setvar DefaultDataPath "S:\SQL-DB\MSSQL10_50.MSSQLSERVER\MSSQL\Data\"
:setvar DefaultLogPath "T:\SQL-TL\MSSQL10_50.MSSQLSERVER\MSSQL\Data\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[get_employees_birthday]...';


GO
ALTER PROCEDURE [dbo].[get_employees_birthday]
    @day DATE = NULL ,
    @month INT = NULL
AS
    BEGIN
        SELECT  *
        FROM    employees_view e
        WHERE  e.is_hidden = 0 and ( @day IS NULL
                  OR ( @day IS NOT NULL
                       AND month(e.birth_date) = month(@day) and day(e.birth_date) = day(@day)
                     )
                )
                AND ( @month IS NULL
                      OR ( @month IS NOT NULL
                           AND MONTH(e.birth_date) = @month
                         )
                    )
					order by month(birth_date), day(birth_date)
    END
GO
PRINT N'Altering [dbo].[get_employees_newbie]...';


GO
ALTER PROCEDURE [dbo].[get_employees_newbie]
	@date_came date
AS
    BEGIN
        SET NOCOUNT ON;
		select id, full_name, position,city,department, date_newbie
		from (
		SELECT id, full_name, position,city,department, case when date_came is not null and convert(date,date_came) > convert(date,date_create) then convert(date,date_came) else convert(date,date_create) end as date_newbie
		FROM employees_view e where e.is_hidden = 0 ) as t
		where t.date_newbie = @date_came
    END
GO
PRINT N'Altering [dbo].[get_other_employee_list]...';


GO
ALTER PROCEDURE [dbo].[get_other_employee_list]
@id_emp_state int,
@id_department int = null
	AS
    BEGIN
        SET NOCOUNT ON;
        SELECT  e.id ,
                e.full_name ,
                p.name AS position ,
                o.name AS organization ,
                c.name AS city ,
                d.name AS department ,
                CASE WHEN male = 1 THEN 1
                     ELSE 0
                END AS male ,
                id_position_org ,
                p_org.name AS position_org,
				d.hidden as is_hidden
        FROM    employees e
                INNER JOIN employee_states st ON e.id_emp_state = st.id
                INNER JOIN positions p ON e.id_position = p.id
                INNER JOIN positions p_org ON e.id_position_org = p_org.id
                INNER JOIN organizations o ON e.id_organization = o.id
                INNER JOIN cities c ON e.id_city = c.id
                INNER JOIN departments d ON e.id_department = d.id
        WHERE   e.enabled = 1 and e.id_emp_state = @id_emp_state
		 AND ( ( @id_department IS NULL
                        OR @id_department <= 0
                      )
                      OR ( @id_department IS NOT NULL
                           AND @id_department > 0
                           AND id_department = @id_department
                         )
                    )
					ORDER BY e.full_name
                         
    END
GO
/*
Шаблон скрипта после развертывания							
--------------------------------------------------------------------------------------
 В данном файле содержатся инструкции SQL, которые будут добавлены в скрипт построения.		
 Используйте синтаксис SQLCMD для включения файла в скрипт после развертывания.			
 Пример:      :r .\myfile.sql								
 Используйте синтаксис SQLCMD для создания ссылки на переменную в скрипте после развертывания.		
 Пример:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

GRANT EXECUTE ON SCHEMA ::dbo TO sqlUnit_prog
--:r .\ins_emp_states.sql
--:r .\ins_orgs.sql
--:r .\ins_cities.sql
--:r .\ins_positions.sql
GO

GO
PRINT N'Update complete.';


GO
