/*
Deployment script for Stuff

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Stuff"
:setvar DefaultFilePrefix "Stuff"
:setvar DefaultDataPath "S:\SQL-DB\MSSQL10_50.MSSQLSERVER\MSSQL\Data\"
:setvar DefaultLogPath "T:\SQL-TL\MSSQL10_50.MSSQLSERVER\MSSQL\Data\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[holiday_work_confirms].[full_name] on table [dbo].[holiday_work_confirms] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[holiday_work_confirms])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Rename refactoring operation with key e15275eb-b26d-4eee-beb0-f26c98dd4601 is skipped, element [dbo].[wd_confirms].[Id] (SqlSimpleColumn) will not be renamed to id';


GO
PRINT N'Altering [dbo].[holiday_work_confirms]...';


GO
ALTER TABLE [dbo].[holiday_work_confirms] ALTER COLUMN [employee_sid] VARCHAR (46) NULL;

ALTER TABLE [dbo].[holiday_work_confirms] ALTER COLUMN [id_hw_document] INT NULL;


GO
ALTER TABLE [dbo].[holiday_work_confirms]
    ADD [full_name] NVARCHAR (150) NOT NULL,
        [enabled]   BIT            DEFAULT 1 NOT NULL;


GO
PRINT N'Altering [dbo].[get_holiday_work_confirms]...';


GO
ALTER PROCEDURE [dbo].[get_holiday_work_confirms]
	@date date
AS
begin set nocount on;
	select full_name from holiday_work_confirms hwc where hwc.enabled=1 and convert(date,hwc.dattim1) = @date

end
GO
PRINT N'Refreshing [dbo].[save_holiday_work_confirm]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[save_holiday_work_confirm]';


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e15275eb-b26d-4eee-beb0-f26c98dd4601')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e15275eb-b26d-4eee-beb0-f26c98dd4601')

GO

GO
/*
Шаблон скрипта после развертывания							
--------------------------------------------------------------------------------------
 В данном файле содержатся инструкции SQL, которые будут добавлены в скрипт построения.		
 Используйте синтаксис SQLCMD для включения файла в скрипт после развертывания.			
 Пример:      :r .\myfile.sql								
 Используйте синтаксис SQLCMD для создания ссылки на переменную в скрипте после развертывания.		
 Пример:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

GRANT EXECUTE ON SCHEMA ::dbo TO sqlUnit_prog
--:r .\ins_emp_states.sql
--:r .\ins_orgs.sql
--:r .\ins_cities.sql
--:r .\ins_positions.sql
GO

GO
PRINT N'Update complete.';


GO
