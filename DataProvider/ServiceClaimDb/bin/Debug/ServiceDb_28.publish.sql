/*
Deployment script for Service

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Service"
:setvar DefaultFilePrefix "Service"
:setvar DefaultDataPath "E:\mssql\"
:setvar DefaultLogPath "E:\mssql\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[classifier].[descr] is being dropped, data loss could occur.

The column [dbo].[classifier].[id] on table [dbo].[classifier] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The type for column id_parent in table [dbo].[classifier] is currently  INT NOT NULL but is being changed to  BIT NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[classifier])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'The following operation was generated from a refactoring log file a06a2380-80e3-4368-9f01-6e326d5b3a38';

PRINT N'Rename [dbo].[classifier].[id] to id_category';


GO
EXECUTE sp_rename @objname = N'[dbo].[classifier].[id]', @newname = N'id_category', @objtype = N'COLUMN';


GO
PRINT N'Rename refactoring operation with key ce76b1d5-10d2-42f1-a15c-c99d0bfe2991 is skipped, element [dbo].[classifier_categories].[Id] (SqlSimpleColumn) will not be renamed to id';


GO
PRINT N'Dropping unnamed constraint on [dbo].[classifier]...';


GO
ALTER TABLE [dbo].[classifier] DROP CONSTRAINT [DF__classifie__id_pa__2F10007B];


GO
PRINT N'Dropping unnamed constraint on [dbo].[classifier]...';


GO
ALTER TABLE [dbo].[classifier] DROP CONSTRAINT [DF__classifie__datti__300424B4];


GO
PRINT N'Dropping unnamed constraint on [dbo].[classifier]...';


GO
ALTER TABLE [dbo].[classifier] DROP CONSTRAINT [DF__classifie__datti__30F848ED];


GO
PRINT N'Dropping unnamed constraint on [dbo].[classifier]...';


GO
ALTER TABLE [dbo].[classifier] DROP CONSTRAINT [DF__classifie__enabl__31EC6D26];


GO
PRINT N'Dropping unnamed constraint on [dbo].[classifier]...';


GO
ALTER TABLE [dbo].[classifier] DROP CONSTRAINT [DF__classifier__time__32E0915F];


GO
PRINT N'Dropping unnamed constraint on [dbo].[classifier]...';


GO
ALTER TABLE [dbo].[classifier] DROP CONSTRAINT [DF__classifie__price__33D4B598];


GO
PRINT N'Dropping unnamed constraint on [dbo].[classifier]...';


GO
ALTER TABLE [dbo].[classifier] DROP CONSTRAINT [DF__classifie__cost___34C8D9D1];


GO
PRINT N'Dropping unnamed constraint on [dbo].[classifier]...';


GO
ALTER TABLE [dbo].[classifier] DROP CONSTRAINT [DF__classifie__cost___35BCFE0A];


GO
PRINT N'Starting rebuilding table [dbo].[classifier]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_classifier] (
    [id_category]  INT             IDENTITY (1, 1) NOT NULL,
    [id_work_type] INT             NOT NULL,
    [time]         INT             DEFAULT 0 NOT NULL,
    [price]        DECIMAL (10, 2) DEFAULT 0 NOT NULL,
    [cost_people]  DECIMAL (10, 2) DEFAULT 0 NOT NULL,
    [cost_company] DECIMAL (10, 2) DEFAULT 0 NOT NULL,
    [dattim1]      DATETIME        DEFAULT getdate() NOT NULL,
    [dattim2]      DATETIME        DEFAULT '3.3.3333' NOT NULL,
    [enabled]      BIT             DEFAULT 1 NOT NULL,
    [creator_sid]  NVARCHAR (46)   NOT NULL,
    [id]           INT             NOT NULL,
    [id_parent]    BIT             NOT NULL,
    [name]         NVARCHAR (4000) NOT NULL,
    [number]       NVARCHAR (20)   NOT NULL,
    PRIMARY KEY CLUSTERED ([id_category] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[classifier])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_classifier] ON;
        INSERT INTO [dbo].[tmp_ms_xx_classifier] ([id_category], [id_parent], [name], [number], [dattim1], [dattim2], [enabled], [creator_sid], [id_work_type], [time], [price], [cost_people], [cost_company])
        SELECT   [id_category],
                 [id_parent],
                 [name],
                 [number],
                 [dattim1],
                 [dattim2],
                 [enabled],
                 [creator_sid],
                 [id_work_type],
                 [time],
                 [price],
                 [cost_people],
                 [cost_company]
        FROM     [dbo].[classifier]
        ORDER BY [id_category] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_classifier] OFF;
    END

DROP TABLE [dbo].[classifier];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_classifier]', N'classifier';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[classifier_categories]...';


GO
CREATE TABLE [dbo].[classifier_categories] (
    [id]          INT             IDENTITY (1, 1) NOT NULL,
    [id_parent]   BIT             NOT NULL,
    [name]        NVARCHAR (4000) NOT NULL,
    [number]      NVARCHAR (20)   NOT NULL,
    [descr]       NVARCHAR (MAX)  NULL,
    [dattim1]     DATETIME        NOT NULL,
    [dattim2]     DATETIME        NOT NULL,
    [enabled]     BIT             NOT NULL,
    [creator_sid] NVARCHAR (46)   NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[classifier_categories]...';


GO
ALTER TABLE [dbo].[classifier_categories]
    ADD DEFAULT getdate() FOR [dattim1];


GO
PRINT N'Creating unnamed constraint on [dbo].[classifier_categories]...';


GO
ALTER TABLE [dbo].[classifier_categories]
    ADD DEFAULT '3.3.3333' FOR [dattim2];


GO
PRINT N'Creating unnamed constraint on [dbo].[classifier_categories]...';


GO
ALTER TABLE [dbo].[classifier_categories]
    ADD DEFAULT 1 FOR [enabled];


GO
PRINT N'Refreshing [dbo].[get_classifier_list]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[get_classifier_list]';


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a06a2380-80e3-4368-9f01-6e326d5b3a38')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a06a2380-80e3-4368-9f01-6e326d5b3a38')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ce76b1d5-10d2-42f1-a15c-c99d0bfe2991')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ce76b1d5-10d2-42f1-a15c-c99d0bfe2991')

GO

GO
/*
Шаблон скрипта после развертывания							
--------------------------------------------------------------------------------------
 В данном файле содержатся инструкции SQL, которые будут добавлены в скрипт построения.		
 Используйте синтаксис SQLCMD для включения файла в скрипт после развертывания.			
 Пример:      :r .\myfile.sql								
 Используйте синтаксис SQLCMD для создания ссылки на переменную в скрипте после развертывания.		
 Пример:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

GRANT EXECUTE ON SCHEMA ::dbo TO sqlUnit_prog
if not exists(select 1 from claim_states)
begin
	insert into claim_states (name, sys_name, order_num)
	values (N'Новая', N'NEW', 10)
	insert into claim_states (name, sys_name, order_num)
	values (N'Техподдержка', N'TECH', 20)
	insert into claim_states (name, sys_name, order_num)
	values (N'Назначено', N'SET', 30)
	insert into claim_states (name, sys_name, order_num)
	values (N'Выполнена', N'END', 40)
end
GO

GO
PRINT N'Update complete.';


GO
